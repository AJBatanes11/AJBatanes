@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --white-custom: #f4f4f4;
  --black-custom: #252422;
  --light-glass: rgba(170, 170, 170, 0.8);
  --dark-glass: rgba(85, 85, 85, 0.8);

  --light-static: #f4f4f4;
  --dark-static: #252422;
  --light-static-glass: rgba(170, 170, 170, 0.8);
  --dark-static-glass: rgba(85, 85, 85, 0.8);
}

.dark {
  --white-custom: #252422;
  --black-custom: #f4f4f4;
  --light-glass: rgba(85, 85, 85, 0.8);
  --dark-glass: rgba(170, 170, 170, 0.8);
}

@layer base {
  *,
  ::after,
  ::before {
    border-color: var(--color-gray-200, currentColor);
  }
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

.noise_bg {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.noise_bg:after {
  position: absolute;
  top: -10rem;
  left: -10rem;
  width: calc(100% + 20rem);
  height: calc(100% + 20rem);
  animation: noise_bg 1s steps(2) infinite;
  background-image: url(/noise.png);
  background-position: 50%;
  content: "";
  will-change: transform;
}

@keyframes noise_bg {
  0% {
    transform: translate3d(0, 9rem, 0);
  }
  10% {
    transform: translate3d(-1rem, -4rem, 0);
  }
  20% {
    transform: translate3d(-8rem, 2rem, 0);
  }
  30% {
    transform: translate3d(9rem, -9rem, 0);
  }
  40% {
    transform: translate3d(-2rem, 7rem, 0);
  }
  50% {
    transform: translate3d(-9rem, -4rem, 0);
  }
  60% {
    transform: translate3d(2rem, 6rem, 0);
  }
  70% {
    transform: translate3d(7rem, -8rem, 0);
  }
  80% {
    transform: translate3d(-9rem, 1rem, 0);
  }
  90% {
    transform: translate3d(6rem, -5rem, 0);
  }
  to {
    transform: translate3d(-7rem, 0, 0);
  }
}

/* button */
button {
  background: none;
  appearance: none;
  -webkit-appearance: none;
  border: none;
  outline: none;
  cursor: pointer;
}
.btn {
  display: block;
  position: relative;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  text-decoration: none;
  line-height: 1.2;
  transition:
    opacity 0.5s cubic-bezier(0.4, 0, 0.2, 1),
    transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  border-radius: 9999px;
}
.btn,
.btn-arrow svg {
  will-change: opacity, transform, right;
}

@media screen and (min-width: 1024px) {
  .btn {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}
.btn-arrow {
  padding-right: 3rem;
}
@media screen and (min-width: 1024px) {
  .btn-arrow {
    padding-right: 3rem;
  }
}
.btn-arrow svg {
  position: absolute;
  right: 1.5rem;
  top: 50%;
  transform: translateY(-50%);
  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}
@media screen and (min-width: 1024px) {
  .btn-arrow svg {
    right: 1.5rem;
  }
}
.btn-arrow:hover svg {
  right: 1.25rem;
}
.btn-white {
  background: white;
  color: black;
}
.btn-black {
  background: black;
  color: white;
}
.dark .btn-white {
  background: black;
  color: white;
}
.dark .btn-black {
  background: white;
  color: black;
}
.btn:hover {
  opacity: 0.8;
}

/* Project card */
@layer components {
  .project-card {
    @apply relative;
  }

  /* Mobile/Medium layout: Even/Odd */
  .project-card:nth-child(odd) {
    @apply top-0;
  }

  .project-card:nth-child(even) {
    @apply -top-[60px];
  }

  @media (min-width: 768px) {
    .project-card:nth-child(even) {
      @apply -top-[80px];
    }
  }

  /* XL layout: index % 3 mapping */
  @media (min-width: 1280px) {
    /* index % 3 === 0 → 1st, 4th, 7th... */
    .project-card:nth-child(3n + 1) {
      @apply xl:top-[20px];
    }

    /* index % 3 === 1 → 2nd, 5th, 8th... */
    .project-card:nth-child(3n + 2) {
      @apply xl:-top-[120px];
    }

    /* index % 3 === 2 → 3rd, 6th, 9th... */
    .project-card:nth-child(3n) {
      @apply xl:-top-[400px];
    }
  }
}

@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translateY(24px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fadeInUp {
  animation-name: fadeInUp;
  animation-duration: 0.6s;
  animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  animation-fill-mode: forwards;
}

/* Add this somewhere in your global CSS */
.group:hover .underline {
  transform-origin: left;
}
.group:not(:hover) .underline {
  transform-origin: right;
}
